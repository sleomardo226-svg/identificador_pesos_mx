import pip
pip.main(['install', 'roboflow'])

from roboflow import Roboflow
rf = Roboflow(api_key="0fC6oSeHKePBxvqR1i9i")
project = rf.workspace("leonardors").project("pesos_mx-cwlee")
version = project.version(1)
dataset = version.download("yolov8")

import os

# Ruta donde YOLO y Roboflow guardarán el dataset
dataset_dir = r"C:\datasets\pesos_mx-1"

# Crear la carpeta si no existe
os.makedirs(dataset_dir, exist_ok=True)

print(f"✅ Carpeta verificada o creada: {dataset_dir}")

from roboflow import Roboflow
import os

# Crear carpeta (por si no existe)
os.makedirs(r"C:\datasets", exist_ok=True)

# Descargar dataset desde Roboflow
rf = Roboflow(api_key="0fC6oSeHKePBxvqR1i9i")
project = rf.workspace("leonardors").project("pesos_mx-cwlee")
version = project.version(1)
dataset = version.download("yolov8", location=r"C:\datasets")

print("✅ Dataset descargado en:", dataset.location)

from ultralytics import YOLO
import os

# Ruta correcta al dataset
data_yaml = r"C:\datasets\pesos_mx-1\data.yaml"

# Verifica que existe
if os.path.exists(data_yaml):
    print("✅ Dataset listo:", data_yaml)
    model = YOLO("yolov8n.pt")

    model.train(
        data=data_yaml,
        epochs=80,
        imgsz=640,
        batch=8,
        name="monedas_mx"
    )
else:
    print("❌ No se encontró el dataset en:", data_yaml)

from ultralytics import YOLO

data_yaml = r"C:\datasets\pesos_mx-1\data.yaml"

model = YOLO("yolov8n.pt")

model.train(
    data=data_yaml,
    epochs=80,
    imgsz=640,
    batch=8,
    name="monedas_mx"
)
from ultralytics import YOLO
import cv2

from ultralytics import YOLO
import cv2

# Cargar tu modelo entrenado
model = YOLO(r"C:\runs\detect\monedas_mx20\weights\best.pt")

# Abrir la cámara (0 = cámara integrada)
cap = cv2.VideoCapture(0)

# Título de la ventana
window_name = "Detección de Monedas MX"

while True:
    ret, frame = cap.read()
    if not ret:
        break

    # Ejecutar la predicción
    results = model.predict(frame, conf=0.5, verbose=False)

    # Dibujar las detecciones sobre la imagen
    annotated_frame = results[0].plot()

    # Mostrar ventana
    cv2.imshow(window_name, annotated_frame)

    # Salir con la tecla ESC
    if cv2.waitKey(1) & 0xFF == 27:
        break

cap.release()
cv2.destroyAllWindows()




   

                